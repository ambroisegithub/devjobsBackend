npx prisma migrate dev --name init


import { Request, Response } from "express";
import {
  createJob,
  findJobById,
  findAllJobs,
  deleteJob,
  JobDocument,
} from "../models/job";

import { UploadToCloud } from "../Helpers/cloud";
export const postJob = async (req: Request, res: Response) => {
  try {
    const job: JobDocument = req.body;

    if (!req.file) {
      return res.status(400).json({ error: "Please upload a logo image" });
    }

    const logoResult = await UploadToCloud(req.file, res); // Upload logo image

    // Add logo URL to the job data
    job.logo = (logoResult as any).secure_url;
    const newJob = await createJob(job);
    res.status(201).json(newJob);
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: "Internal Server Error" });
  }
};
export const getJob = async (req: Request, res: Response) => {
  const { id } = req.params;
  const jobId = Number(id);

  if (isNaN(jobId)) {
    res.status(400).json({ error: "Invalid job ID" });
    return;
  }

  const job = await findJobById(jobId);
  if (!job) {
    res.status(404).json({ error: "Job not found" });
    return;
  }

  res.json(job);
};
export const getJobs = async (req: Request, res: Response) => {
  const jobs = await findAllJobs();
  res.json(jobs);
};

export const removeJob = async (req: Request, res: Response) => {
  const { id } = req.params;
  await deleteJob(Number(id));
  res.json({ message: "Job deleted successfully" });
};


// job.routes.ts

import express from "express";
import {
  postJob,
  getJob,
  getJobs,
  removeJob,
} from "../controllers/jobController";
import upload from "../Helpers/multer";
const router = express.Router();
router.post("/postJob", upload.single("logo"), postJob);
router.get("/jobs/:id", getJob);
router.get("/jobs", getJobs);
router.delete("/jobs/:id", removeJob);

export default router;
